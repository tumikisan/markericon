name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
      - develop

permissions: # ★ デプロイに必要な権限を追加
  contents: read
  pages: write
  id-token: write      

jobs:
  build:
    runs-on: ubuntu-latest
    
    # ブランチに応じて環境を動的に設定
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Replace tokens
        run: |
          
          # プレースホルダーを環境変数（Secretsから注入）で置換する
          sed -i "s|__PLACEHOLDER_WEB_APP_URL__|${{ secrets.WEB_APP_URL }}|g" index.html
          sed -i "s|__PLACEHOLDER_SECRET_TOKEN__|${{ secrets.SECRET_TOKEN }}|g" index.html
          sed -i "s|__PLACEHOLDER_YOUR_API_KEY__|${{ secrets.YOUR_API_KEY }}|g" index.html
          # 他のファイルも必要なら置換する

      # ★★★ ここに確認用のステップを追加 ★★★
      - name: Verify replacements
        run: |
          echo "--- Verifying that placeholders are gone ---"
          # grep -q '文字列' ファイル名 は、もし文字列が見つかったら終了コード0(成功)、見つからなかったら1(失敗)を返す
          # ! (感嘆符) で結果を反転させる
          if ! grep -q '__PLACEHOLDER_' index.html; then
            echo "✅ All placeholders were successfully replaced."
          else
            echo "❌ ERROR: Placeholders still exist in index.html!"
            # ファイルの中身をログに出力して、何が残っているか確認する
            echo "--- Contents of index.html ---"
            cat index.html
            # ワークフローを意図的に失敗させる
            exit 1
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

           # デプロイジョブ
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # buildジョブの完了を待つ
    steps:

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
